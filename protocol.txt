Protokoll

Projekt: Media Ratings Platform - Intermediate
Yusuf Khouja
19.10.2025

Architektur:

Controller: verarbeitet HTTP-Requests (MediaCreateController, UserLoginController, UserRegisterController)
Server: enthält die Module, die den HTTP-Server starten (HttpServerApp, Main, Router, RequestHandler)
Service: enthält die Geschäftslogik (MediaService, UserService)
Model: repräsentiert Datenobjekte (MediaEntry, User, Rating)
Utils: Helferfunktionen (JsonUtil, DbUtil, TokenManager, JsonResponse)

Technologien:
⦁	Java 25
⦁	com.sun.net.Httpserver für einfachen HTTP-Server
⦁	Jackson-Bibliothek für JSON-Verarbeitung über eigene Utility-Klasse (JsonUtil)
⦁	Token-basierte Authentifizierung (TokenManager) und Passwort-Hashing
⦁	Verwaltung mit Apache Maven (pom.xml)
⦁	MySQL/PostgreSQL über DbUtil
⦁	Docker Container für Server (mrp_server) und PostgreSQL-Datenbank (mrp_db)

Tests:
Keine Unit-Tests; Funktionalität über Postman geprüft. Priorisierte Testbereiche: Passwort-Hashing und Login- und Registrierungs-Logik.

Probleme & Lösungen:
Login hat kein JSON zurückgegeben: JsonResponse.java angepasst.
socket hang up in Postman: Request-Body komplett in String einlesen, pom.xml korrigiert.
Docker-Netzwerk: DB-Host auf „db“ gesetzt.
init.sql-Änderungen: altes Docker-Volume gelöscht.
Java-Version: LTS-Version in pom.xml und Dockerfile angepasst.

Zeitaufwand:
Projekt-Setup & Planung: (Maven, IDE, Architektur) - 3 Stunden
Datenbank-Schema & init.sql: - 2 Stunden
Server-Grundgerüst: (HttpServer, Routing) - 4 Stunden
Datenbankanbindung & Services: (User/Media-Logik) - 6 Stunden
Sicherheit: (Passwort-Hashing, Token-Auth) - 3 Stunden
Containerisierung: (Dockerfile, Docker Compose) - 3 Stunden
Debugging & Manuelles Testen: (Postman, Fehlersuche) - 7 Stunden
Dokumentation: (README, Protokoll) - 1 Stunden
Gesamtaufwand: ca. 31 Stunden

App Struktur

Media Ratings Platform/
│
├─ src/
│  ├─ main/
│    ├─ java/
│      ├─ controllers/
│      │  ├─ MediaCreateController.java
│      │  ├─ UserLoginController.java
│      │  └─ UserRegisterController.java
│      │
│      ├─ models/
│      │  ├─ MediaEntry.java
│      │  ├─ User.java
│      │  └─ Rating.java
│      │
│      ├─ services/
│      │  ├─ MediaService.java
│      │  └─ UserService.java
│      │
│      ├─ utils/
│      │  ├─ JsonUtil.java
│      │  ├─ JsonResponse.java
│      │  ├─ DbUtil.java
│      │  └─ TokenManager.java
│      │
│      └─ server/
│      	├─ HttpServerApp.java
│       ├─ Main.java
│       ├─ Router.java
│       └─ RequestHandler.java
│
│
│
├─ Dockerfile
├─ docker-compose.yml
├─ init.sql
└─ pom.xml
